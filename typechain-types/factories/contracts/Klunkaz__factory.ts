/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Klunkaz, KlunkazInterface } from "../../contracts/Klunkaz";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "BikeListed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "bikeId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "renter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "BikeRented",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "bikeId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "renter",
        type: "address",
      },
    ],
    name: "RentalEnded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "productId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "reviewer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rating",
        type: "uint256",
      },
    ],
    name: "ReviewAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "productId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rating",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "comment",
        type: "string",
      },
    ],
    name: "addReview",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bikeIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "bikeId",
        type: "uint256",
      },
    ],
    name: "endRental",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getBike",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "productID",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "string",
                name: "bikeBrand",
                type: "string",
              },
              {
                internalType: "string",
                name: "bikeTitle",
                type: "string",
              },
              {
                internalType: "string",
                name: "bikeSize",
                type: "string",
              },
              {
                internalType: "string",
                name: "bikeColor",
                type: "string",
              },
              {
                internalType: "string",
                name: "bikeFrame",
                type: "string",
              },
              {
                internalType: "string",
                name: "bikeFork",
                type: "string",
              },
              {
                internalType: "string",
                name: "bikeShock",
                type: "string",
              },
            ],
            internalType: "struct Klunkaz.BikeDetails",
            name: "details",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "string",
                name: "category",
                type: "string",
              },
              {
                internalType: "string",
                name: "images",
                type: "string",
              },
              {
                internalType: "string",
                name: "bikeFeatures",
                type: "string",
              },
              {
                internalType: "bool",
                name: "isStolen",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "isInsured",
                type: "bool",
              },
              {
                internalType: "enum Klunkaz.ListingType",
                name: "listingType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "rentalPrice",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isRented",
                type: "bool",
              },
              {
                internalType: "address",
                name: "currentRenter",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "rentalEndTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "securityDeposit",
                type: "uint256",
              },
            ],
            internalType: "struct Klunkaz.BikeMetadata",
            name: "metadata",
            type: "tuple",
          },
        ],
        internalType: "struct Klunkaz.Bike",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "productId",
        type: "uint256",
      },
    ],
    name: "getProductReviews",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "reviewer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "rating",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "comment",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct Klunkaz.Review[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "bikeId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "renter",
        type: "address",
      },
    ],
    name: "getRentalHistory",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "bikeBrand",
            type: "string",
          },
          {
            internalType: "string",
            name: "bikeTitle",
            type: "string",
          },
          {
            internalType: "string",
            name: "bikeSize",
            type: "string",
          },
          {
            internalType: "string",
            name: "bikeColor",
            type: "string",
          },
          {
            internalType: "string",
            name: "bikeFrame",
            type: "string",
          },
          {
            internalType: "string",
            name: "bikeFork",
            type: "string",
          },
          {
            internalType: "string",
            name: "bikeShock",
            type: "string",
          },
        ],
        internalType: "struct Klunkaz.BikeDetails",
        name: "details",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "string",
            name: "category",
            type: "string",
          },
          {
            internalType: "string",
            name: "images",
            type: "string",
          },
          {
            internalType: "string",
            name: "bikeFeatures",
            type: "string",
          },
          {
            internalType: "bool",
            name: "isStolen",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isInsured",
            type: "bool",
          },
          {
            internalType: "enum Klunkaz.ListingType",
            name: "listingType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "rentalPrice",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isRented",
            type: "bool",
          },
          {
            internalType: "address",
            name: "currentRenter",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "rentalEndTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "securityDeposit",
            type: "uint256",
          },
        ],
        internalType: "struct Klunkaz.BikeMetadata",
        name: "metadata",
        type: "tuple",
      },
    ],
    name: "listBike",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "bikeId",
        type: "uint256",
      },
    ],
    name: "markAsStolen",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "bikeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "durationInDays",
        type: "uint256",
      },
    ],
    name: "rentBike",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "bikeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "updatePrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "verifyUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523462000027575b620000156200013d565b604051613814620004ca823961381490f35b62000030600080fd5b6200000b565b50634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b038211176200006f57604052565b6200007962000036565b604052565b90620000956200008d60405190565b92836200004d565b565b602090620000b8906001600160401b038111620000bc57601f01601f191690565b0190565b620000c662000036565b601f01601f191690565b90620000e6620000e08362000097565b6200007e565b918252565b620000f76007620000d0565b6625b63ab735b0bd60c91b602082015290565b62000114620000eb565b90565b620001236004620000d0565b634b4c4e4b60e01b602082015290565b6200011462000117565b620000956200014b6200010a565b6200015562000133565b6200016091620001b7565b620000953362000467565b6200011462000114620001149290565b6200011460016200016b565b90600019905b9181191691161790565b90620001ab62000114620001b3926200016b565b825462000187565b9055565b90620001c391620003d7565b62000095620001d16200017b565b600662000197565b50634e487b7160e01b600052602260045260246000fd5b906001600283049216801562000217575b60208310146200020d57565b62000095620001d9565b91607f169162000201565b9160001960089290920291821b911b6200018d565b91906200024c62000114620001b3936200016b565b90835462000222565b620000959160009162000237565b8181106200026f575050565b806200027f600060019362000255565b0162000263565b9190601f81116200029657505050565b620002aa6200009593600052602060002090565b906020601f840181900483019310620002ce575b6020601f90910104019062000263565b9091508190620002be565b90620002e3815190565b906001600160401b038211620003bb575b6200030c82620003058554620001f0565b8562000286565b602090601f83116001146200034b57620001b39291600091836200033f575b5050600019600883021c1916906002021790565b0151905038806200032b565b601f198316916200036185600052602060002090565b9260005b818110620003a25750916002939185600196941062000388575b50505002019055565b01516000196008601f8516021c191690553880806200037f565b9193602060018192878701518155019501920162000365565b620003c562000036565b620002f4565b906200009591620002d9565b90620003e962000095926000620003cb565b6001620003cb565b62000114905b6001600160a01b031690565b620001149054620003f1565b906001600160a01b03906200018d565b6200011490620003f7906001600160a01b031682565b62000114906200041f565b620001149062000435565b906200045f62000114620001b39262000440565b82546200040f565b62000473600762000403565b90620004818160076200044b565b620004b8620004b17f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09362000440565b9162000440565b91620004c360405190565b600090a356fe60806040526004361015610018575b610016600080fd5b005b60003560e01c806301ffc9a71461023457806306fdde031461022b578063081812fc14610222578063095ea7b31461021957806323b872dd1461021057806333f1393b146102075780633e9e27aa146101fe57806342842e0e146101f557806346a4237b146101ec5780634d813120146101e357806356bc082e146101da5780636352211e146101d157806370a08231146101c8578063715018a6146101bf57806382367b2d146101b65780638da5cb5b146101ad57806395d89b41146101a457806397491d6f1461019b578063a22cb46514610192578063a786de1814610189578063aafbbe0314610180578063acfc78fa14610177578063b88d4fde1461016e578063c87b56dd14610165578063e985e9c51461015c578063f2fde38b146101535763fbe7b2150361000e5761014e610f3a565b61000e565b5061014e610ef1565b5061014e610ec6565b5061014e610e74565b5061014e610e49565b5061014e610cbd565b5061014e610bef565b5061014e6109e8565b5061014e6109c0565b5061014e610953565b5061014e610929565b5061014e6108f5565b5061014e6108cd565b5061014e61087e565b5061014e610854565b5061014e61082a565b5061014e610803565b5061014e6107dc565b5061014e610789565b5061014e610695565b5061014e61066a565b5061014e610584565b5061014e6104ba565b5061014e61044f565b5061014e6103be565b5061014e61034c565b5061014e61028c565b600080fd5b6001600160e01b031981165b0361023d57565b9050359061026282610242565b565b906102789160208183031261027b57610255565b90565b610283600080fd5b610255565b9052565b50346102c0575b6102bc6102a96102a4366004610264565b611179565b6040515b91829182901515815260200190565b0390f35b6102c8600080fd5b610293565b60009103126102d857565b610262600080fd5b60005b8381106102f35750506000910152565b81810151838201526020016102e3565b601f01601f191690565b61032e61030360209361033793610322815190565b80835293849260200190565b958691016102e0565b0190565b60208082526102789291019061030d565b5034610375575b61035e3660046102cd565b6102bc6103696113fe565b6040519182918261033b565b61037d600080fd5b610353565b8061024e565b9050359061026282610382565b906102789160208183031215610388576103ad600080fd5b610388565b6001600160a01b031690565b50346103f5575b6102bc6103db6103d6366004610395565b611622565b604051918291826001600160a01b03909116815260200190565b6103fd600080fd5b6103c5565b6001600160a01b03811661024e565b9050359061026282610402565b919061027890604084820312610442575b6104398185610411565b93602001610388565b61044a600080fd5b61042f565b503461046f575b61046a61046436600461041e565b906115b7565b604051005b610477600080fd5b610456565b90916060828403126104ad575b6102786104968484610411565b936104a48160208601610411565b93604001610388565b6104b5600080fd5b610489565b50346104d5575b61046a6104cf36600461047c565b916116f6565b6104dd600080fd5b6104c1565b908160e09103126104f05790565b610278600080fd5b90816101609103126104f05790565b9091606082840312610577575b6102786105218484610388565b936105418160208601356001600160401b03811161056a575b86016104e2565b936040810135906001600160401b03821161055d575b016104f8565b610565600080fd5b610557565b610572600080fd5b61053a565b61057f600080fd5b610514565b50346105b3575b6102bc6105a261059c366004610507565b91612588565b6040515b9182918290815260200190565b6105bb600080fd5b61058b565b909182601f830112156105fb575b60208235926001600160401b0384116105ee575b0192828401116102d857565b6105f6600080fd5b6105e2565b610603600080fd5b6105ce565b909160608284031261065d575b61064c6106228484610388565b936106308160208601610388565b936040810135906001600160401b038211610650575b016105c0565b9091565b610658600080fd5b610646565b610665600080fd5b610615565b5034610688575b61046a61067f366004610608565b92919091612f25565b610690600080fd5b610671565b50346106b0575b61046a6106aa36600461047c565b91611713565b6106b8600080fd5b61069c565b80516001600160a01b0316825290610278906060806106fa608084016106e860208801516020870152565b6040870151858203604087015261030d565b940151910152565b90610278916106bd565b90610722610718835190565b8083529160200190565b90816107346020830284019460200190565b926000915b83831061074857505050505090565b9091929394602061076b61076483856001950387528951610702565b9760200190565b9301930191939290610739565b60208082526102789291019061070c565b50346107b2575b6102bc6107a66107a1366004610395565b6134ef565b60405191829182610778565b6107ba600080fd5b610790565b906102789160208183031215610411576107d7600080fd5b610411565b50346107f6575b61046a6107f13660046107bf565b613022565b6107fe600080fd5b6107e3565b503461081d575b61046a610818366004610395565b61306c565b610825600080fd5b61080a565b5034610847575b6102bc6103db610842366004610395565b6112d4565b61084f600080fd5b610831565b5034610871575b6102bc6105a261086c3660046107bf565b61124b565b610879600080fd5b61085b565b5034610898575b6108903660046102cd565b61046a610f9c565b6108a0600080fd5b610885565b9190610278906040848203126108c0575b6104398185610388565b6108c8600080fd5b6108b6565b50346108e8575b61046a6108e23660046108a5565b906130a3565b6108f0600080fd5b6108d4565b503461091c575b6109073660046102cd565b6102bc6103db6007546001600160a01b031690565b610924600080fd5b6108fc565b5034610946575b61093b3660046102cd565b6102bc610369611408565b61094e600080fd5b610930565b503461096d575b61046a610968366004610395565b612ce6565b610975600080fd5b61095a565b80151561024e565b905035906102628261097a565b9190610278906040848203126109b3575b6109aa8185610411565b93602001610982565b6109bb600080fd5b6109a0565b50346109db575b61046a6109d536600461098f565b9061164f565b6109e3600080fd5b6109c7565b5061046a6109f73660046108a5565b90612b69565b6102789160c0610a85610a73610a61610a4f610a3d610a2b60e0880160008a015189820360008b015261030d565b602089015188820360208a015261030d565b6040880151878203604089015261030d565b6060870151868203606088015261030d565b6080860151858203608087015261030d565b60a085015184820360a086015261030d565b9201519060c081840391015261030d565b50634e487b7160e01b600052602160045260246000fd5b60021115610ab757565b610262610a96565b9061026282610aad565b61027890610abf565b61028890610ac9565b906102789061014080610b166106e8610b0461016086016000890151878203600089015261030d565b6020880151868203602088015261030d565b60608087015115159085015294608081810151151590850152610b4160a082015160a0860190610ad2565b610b5060c082015160c0860152565b60e081810151151590850152610100808201516001600160a01b031690850152610b81610120820151610120860152565b0151910152565b805182526020808201516001600160a01b031690830152610278916080610bcd60a08301610bbb60408601516040860152565b606085015184820360608601526109fd565b920151906080818403910152610adb565b602080825261027892910190610b88565b5034610c18575b6102bc610c0c610c07366004610395565b6133ea565b60405191829182610bde565b610c20600080fd5b610bf6565b919061027890604084820312610c49575b610c408185610388565b93602001610411565b610c51600080fd5b610c36565b90610c76610c6f610c65845190565b8084529260200190565b9260200190565b9060005b818110610c875750505090565b909192610ca4610c9d6001928651815260200190565b9460200190565b929101610c7a565b602080825261027892910190610c56565b5034610ce7575b6102bc610cdb610cd5366004610c25565b90613590565b60405191829182610cac565b610cef600080fd5b610cc4565b50634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b03821117610d2c57604052565b610d34610cf4565b604052565b90610262610d4660405190565b9283610d0b565b6103376020916001600160401b038111610d6b57601f01601f191690565b610303610cf4565b90826000939282370152565b92919061026291610d97610d9283610d4d565b610d39565b9482865260208601918382011115610d7357610db1600080fd5b610d73565b906102789181601f82011215610dd2575b602081359101610d7f565b610dda600080fd5b610dc7565b608081830312610e3c575b610df48282610411565b92610278610e058460208501610411565b93610e138160408601610388565b936060810135906001600160401b038211610e2f575b01610db6565b610e37600080fd5b610e29565b610e44600080fd5b610dea565b5034610e67575b61046a610e5e366004610ddf565b92919091611723565b610e6f600080fd5b610e50565b5034610e91575b6102bc610369610e8c366004610395565b611478565b610e99600080fd5b610e7b565b919061027890604084820312610eb9575b610c408185610411565b610ec1600080fd5b610eaf565b5034610ee4575b6102bc6102a9610ede366004610e9e565b9061166f565b610eec600080fd5b610ecd565b5034610f0b575b61046a610f063660046107bf565b6110bd565b610f13600080fd5b610ef8565b610278916008021c81565b906102789154610f18565b6102786000600c610f23565b5034610f57575b610f4c3660046102cd565b6102bc6105a2610f2e565b610f5f600080fd5b610f41565b610f6c610ff8565b610262610f8a565b6103b26102786102789290565b61027890610f74565b610262610f976000610f81565b61111c565b610262610f64565b15610fab57565b60405162461bcd60e51b815280610ff4600482016020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b0390fd5b61026261100d6007546001600160a01b031690565b611026611019336103b2565b916001600160a01b031690565b14610fa4565b61026290611038610ff8565b611098565b1561104457565b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b61026290610f976110ac6103b26000610f81565b6001600160a01b038316141561103d565b6102629061102c565b906001600160a01b03905b9181191691161790565b610278906103b2906001600160a01b031682565b610278906110db565b610278906110ef565b90611111610278611118926110f8565b82546110c6565b9055565b6007546001600160a01b031690611134816007611101565b6111676111617f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0936110f8565b916110f8565b9161117160405190565b80805b0390a3565b6380ac58cd60e01b6001600160e01b03198216149081156111a9575b811561119f575090565b6102789150611c33565b6001600160e01b03198116635b5e139f60e01b149150611195565b156111cb57565b60405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608490fd5b9061122c906110f8565b600052602052604060002090565b6102789081565b610278905461123a565b6112836102789161125a600090565b5061127c61126b6103b26000610f81565b6001600160a01b03831614156111c4565b6003611222565b611241565b1561128f57565b60405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606490fd5b6112e19060005b506117c3565b6102786112f16103b26000610f81565b6001600160a01b0383161415611288565b50634e487b7160e01b600052602260045260246000fd5b906001600283049216801561133c575b602083101461133457565b610262611302565b91607f1691611329565b8054600093929161136361135983611319565b8085529360200190565b91600181169081156113b5575060011461137c57505050565b61138f9192939450600052602060002090565b916000925b8184106113a15750500190565b805484840152602090930192600101611394565b92949550505060ff1916825215156020020190565b9061027891611346565b906102626113ee926113e560405190565b938480926113ca565b0383610d0b565b610278906113d4565b61027860006113f5565b61027860016113f5565b6102786102786102789290565b9061142c610d9283610d4d565b918252565b610278600061141f565b610278611431565b61033761145b92602092611455815190565b94859290565b938491016102e0565b611472906102789392611443565b90611443565b61148181611991565b6114896114e7565b805160009061149e61149a83611412565b9190565b111590506114dd576102786114d1916114b961027894611b9e565b906114c360405190565b938492602084019283611464565b90810382520382610d0b565b505061027861143b565b61027861143b565b156114f657565b60405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608490fd5b1561154c57565b60405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608490fd5b90610262916116026115c8836112d4565b6115e66001600160a01b0382166001600160a01b03851614156114ef565b336001600160a01b0382168114918215611607575b5050611545565b611844565b611611925061166f565b38806115fb565b9061122c90611412565b61164261027891611631600090565b5061163b81611991565b6004611618565b546001600160a01b031690565b61026291903361191b565b610278905b60ff1690565b610278905461165a565b6102789161168a61168f92611682600090565b506005611222565b611222565b611665565b1561169b57565b60405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608490fd5b61026292919061170e61170984336117da565b611694565b6135fc565b90916102629261172161143b565b925b6102629392919061173761170984336117da565b6117a4565b1561174357565b6040515b62461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608490fd5b9161026293916117be936117b98383836135fc565b611a49565b61173c565b611642610278916117d2600090565b506002611618565b6117e3826112d4565b916001600160a01b0383166001600160a01b03831614928315611830575b50821561180d57505090565b61182c91925061181f61101991611622565b926001600160a01b031690565b1490565b61183d919350829061166f565b9138611801565b9061185982611854836004611618565b611101565b611862816112d4565b9161189f6118996118937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925956110f8565b926110f8565b92611412565b926118a960405190565b600090a4565b156118b657565b60405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606490fd5b9060ff906110d1565b9061191461027861111892151590565b82546118fb565b6119396001600160a01b0383166001600160a01b03831614156118af565b6119518361194c8461168a856005611222565b611904565b6111746119876119817f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31936110f8565b936110f8565b936102ad60405190565b61199d610262916119a2565b611288565b6119ad9060006112db565b6119bd6110196103b26000610f81565b141590565b9050519061026282610242565b9061027891602081830312156119c2576119e7600080fd5b6119c2565b6001600160a01b0391821681529116602082015260408101919091526080606082018190526102789291019061030d565b506040513d6000823e3d90fd5b3d15611a4457611a393d61141f565b903d6000602084013e565b606090565b92909190611a5683611b37565b15611b2e57611a9b6000611a73611a6e6020966110f8565b6110f8565b92611aa663150b7a0291611a843390565b96611a8e60405190565b998a988997889660e01b90565b8652600486016119ec565b03925af160009181611afe575b50611ae457611ac0611a2a565b8051611acf61149a6000611412565b03611adc57604051611747565b805190602001fd5b61182c630a85bd0160e11b5b916001600160e01b03191690565b611b2091925060203d8111611b27575b611b188183610d0b565b8101906119cf565b9038611ab3565b503d611b0e565b50505050600190565b3b611b4561149a6000611412565b1190565b369037565b90610262611b64611b5e8461141f565b93610d4d565b601f190160208401611b49565b50634e487b7160e01b600052601260045260246000fd5b8115611b92570490565b611b9a611b71565b0490565b611ba781611c43565b90611bb760019261033784611412565b9180611bc284611b4e565b8094611bcc600090565b5060200101905b611bde575b50505090565b611c129060001901926f181899199a1a9b1b9c1cb0b131b232b360811b600a82061a8453611c0c600a611412565b90611b88565b9081611c2161149a6000611412565b14611c2e57909181611bd3565b611bd8565b61182c6301ffc9a760e01b611af0565b611c4d6000611412565b907a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000611c7381611412565b821015611dc5575b506d04ee2d6d415b85acef8100000000611c9481611412565b821015611da3575b50662386f26fc10000611cae81611412565b821015611d81575b506305f5e100611cc581611412565b821015611d5f575b50612710611cda81611412565b821015611d3d575b506064611cee81611412565b821015611d1b575b50611d0461149a600a611412565b1015611d0d5790565b610278906103376001611412565b611d3691611c0c611d2b92611412565b916103376002611412565b9038611cf6565b611d5891611c0c611d4d92611412565b916103376004611412565b9038611ce2565b611d7a91611c0c611d6f92611412565b916103376008611412565b9038611ccd565b611d9c91611c0c611d9192611412565b916103376010611412565b9038611cb6565b611dbe91611c0c611db392611412565b916103376020611412565b9038611c9c565b611de091611c0c611dd592611412565b916103376040611412565b9038611c7b565b15611dee57565b60405162461bcd60e51b815260206004820152601c60248201527f5072696365206d7573742062652067726561746572207468616e2030000000006044820152606490fd5b6002111561023d57565b3561027881611e33565b3561027881610382565b15611e5857565b60405162461bcd60e51b815260206004820152602360248201527f52656e74616c207072696365206d75737420626520677265617465722074686160448201526206e20360ec1b6064820152608490fd5b50634e487b7160e01b600052601160045260246000fd5b6001906000198114611ed0570190565b610337611ea9565b90600019906110d1565b90611ef261027861111892611412565b8254611ed8565b61027860a0610d39565b91906120069060e08482031261201a575b611f1e60e0610d39565b93611f3b8282356001600160401b03811161200d575b8301610db6565b8552611f5b8260208301356001600160401b03811161200d578301610db6565b6020860152611f7e8260408301356001600160401b03811161200d578301610db6565b6040860152611fa18260608301356001600160401b03811161200d578301610db6565b6060860152611fc48260808301356001600160401b03811161200d578301610db6565b6080860152611fe78260a08301356001600160401b03811161200d578301610db6565b60a086015260c0810135906001600160401b038211610e2f5701610db6565b60c0830152565b612015600080fd5b611f34565b612022600080fd5b611f14565b610278903690611f03565b9050359061026282611e33565b9190916101608184031261215f575b61214c61205c610160610d39565b936120798184356001600160401b038111612152575b8501610db6565b85526120998160208501356001600160401b038111612152578501610db6565b60208601526120bc8160408501356001600160401b038111612152578501610db6565b604086015260606120cf82828601610982565b9086015260806120e182828601610982565b9086015260a06120f382828601612032565b9086015260c061210582828601610388565b9086015260e061211782828601610982565b9086015261010061212a82828601610411565b9086015261012061213d82828601610388565b90860152610140809301610388565b90830152565b61215a600080fd5b612072565b612167600080fd5b61204e565b61027890369061203f565b50634e487b7160e01b600052600060045260246000fd5b9160001960089290920291821b911b6110d1565b91906121b361027861111893611412565b90835461218e565b610262916000916121a2565b8181106121d2575050565b806121e060006001936121bb565b016121c7565b9190601f81116121f557505050565b61220761026293600052602060002090565b906020601f840181900483019310612229575b6020601f9091010401906121c7565b909150819061221a565b9061223c815190565b906001600160401b038211612306575b6122608261225a8554611319565b856121e6565b602090601f831160011461229b57611118929160009183612290575b5050600019600883021c1916906002021790565b01519050388061227c565b601f198316916122b085600052602060002090565b9260005b8181106122ee575091600293918560019694106122d5575b50505002019055565b01516000196008601f8516021c191690553880806122cc565b919360206001819287870151815501950192016122b4565b61230e610cf4565b61224c565b9061026291612233565b9061233b60c06006610262946123416000820161233b600088015190565b90612313565b6123536001820161233b602088015190565b6123656002820161233b604088015190565b6123776003820161233b606088015190565b6123896004820161233b608088015190565b61239b6005820161233b60a088015190565b0192015190565b906102629161231d565b9061ff009060081b6110d1565b906123c961027861111892151590565b82546123ac565b6102789051610abf565b9062ff00009060101b6110d1565b906123f861027861111892610ac9565b82546123da565b90610100600160a81b039060081b6110d1565b90612422610278611118926110f8565b82546123ff565b906124c36101406007610262946124486000820161233b600088015190565b61245a6001820161233b602088015190565b61246c6002820161233b604088015190565b6124b1600382016124896124836060890151151590565b82611904565b61249f6124996080890151151590565b826123b9565b6124ab60a088016123d0565b906123e8565b6124c9600482016124c360c088015190565b90611ee2565b6124f5600582016124e061248360e0890151151590565b6101008701516001600160a01b031690612412565b61239b600682016124c361012088015190565b9061026291612429565b610262919061257890608090600a9061252d816124c3875190565b61254e6001820161254860208801516001600160a01b031690565b90611101565b612560600282016124c3604088015190565b61239b60038201612572606088015190565b906123a2565b90612508565b9061026291612512565b9061264660006125a161259a82611412565b8511611de7565b6125ad60a08601611e3d565b6125c06125ba6001610abf565b91610abf565b14612690575b61263661262f6125de6125d9600c611241565b611ec0565b966125ea88600c611ee2565b61262a61262333976126048b6125fe611ef9565b98890152565b6001600160a01b038916602088015261261e8a6040890152565b612027565b6060860152565b61216c565b6080830152565b612641856008611618565b61257e565b6126508382612752565b7f7bdb5fda3c85bc6ad44ee77339210335f0d676769e9d0684d59f0848871d2a1f61268a61268061198186611412565b936105a660405190565b0390a390565b6126b161269f60c08701611e47565b6126ab61149a84611412565b11611e51565b6125c6565b156126bd57565b60405162461bcd60e51b815280610ff4600482016020808252818101527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604082015260600190565b1561270d57565b60405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606490fd5b9061275d6000610f81565b9161277c6001600160a01b0384166001600160a01b03831614156126b6565b61279461278f61278b846119a2565b1590565b612706565b6127a361278f61278b846119a2565b6127c86127b06001611412565b6124c36127be846003611222565b9161033783611241565b6127d781611854846002611618565b61189f6118996118937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef956110f8565b9061281991612814612bc9565b6129e4565b610262612bfb565b6102789060101c61165f565b6102789054612821565b1561283e57565b60405162461bcd60e51b815260206004820152600c60248201526b139bdd08199bdc881c995b9d60a21b6044820152606490fd5b1561287957565b60405162461bcd60e51b815260206004820152601060248201526f10dd5c9c995b9d1b1e481c995b9d195960821b6044820152606490fd5b156128b857565b60405162461bcd60e51b815260206004820152601060248201526f26b0b935b2b21030b99039ba37b632b760811b6044820152606490fd5b8181029291811591840414171561290357565b610262611ea9565b9190820180921161290357565b1561291f57565b60405162461bcd60e51b8152602060048201526014602482015273125b9cdd59999a58da595b9d081c185e5b595b9d60621b6044820152606490fd5b50634e487b7160e01b600052603260045260246000fd5b612992600191612980815490565b84101561299b57600052602060002090565b91020190600090565b6129a361295b565b600052602060002090565b906129d161026292805490600160401b8210156129d7575b600182018155612972565b906121a2565b6129df610cf4565b6129c6565b6129ef816008611618565b90600a82016003810192612a028461282d565b90600191612a0f83610abf565b90612a1990610abf565b14612a2390612837565b6005830194612a3186611665565b15612a3b90612872565b612a4490611665565b15612a4e906128b1565b85612a5b60048501611241565b90612a65916128f0565b92612a7260078201611241565b3490612a7e908661290b565b1115612a8990612918565b612a938387611904565b339586612a9f91612412565b4290612aad62015180611412565b612ab790896128f0565b612ac1908361290b565b612acd91600601611ee2565b85612ad986600b611618565b90612ae391611222565b90612aed916129ae565b01546001600160a01b0316612b01906110f8565b612b0a906110f8565b60008215600093849384938493612b60575bf115612b53575b6111746126806119817f9dc20253d4546ad30b6531427a275ddd62d657517c2fdfcf4b18b5c03e8854bc93611412565b612b5b611a1d565b612b23565b506108fc612b1c565b9061026291612807565b6102786002611412565b15612b8457565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b610262612bd66006611241565b612bea612be1612b73565b91821415612b7d565b6006611ee2565b6102786001611412565b610262612bea612bf1565b15612c0d57565b60405162461bcd60e51b8152602060048201526012602482015271109a5ad9481a5cc81b9bdd081c995b9d195960721b6044820152606490fd5b6102789060081c6103b2565b6102789054612c47565b15612c6457565b60405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606490fd5b15612ca157565b60405162461bcd60e51b815260206004820152601760248201527f52656e74616c20706572696f64206e6f7420656e6465640000000000000000006044820152606490fd5b612d90612cf7610278836008611618565b612d8b600a8201612d486005820193612d17612d1286611665565b612c06565b612d2f6103b26001339301546001600160a01b031690565b6001600160a01b03821614908115612dbd575b50612c5d565b600601612d6542612d5e61149a61027885611241565b1015612c9a565b6124c36000612d748186611904565b612d86612d8082610f81565b86612412565b611412565b612c53565b6111676111617ff9bbd47d9659083aa5b016ffd346aca413549aace523513f610200aeed1e1dd493611412565b9050612dce6110196103b287612c53565b1438612d42565b15612ddc57565b60405162461bcd60e51b815260206004820152601e60248201527f526174696e67206d757374206265206265747765656e203120616e64203500006044820152606490fd5b15612e2857565b60405162461bcd60e51b815260206004820152601760248201527f436f6d6d656e742063616e6e6f7420626520656d7074790000000000000000006044820152606490fd5b6102786080610d39565b610278913691610d7f565b612992600491612980815490565b61026291906124c390606090600390612eb48161254887516001600160a01b031690565b612ec6600182016124c3602088015190565b61239b6002820161233b604088015190565b610262929115612e9057612eea612177565b612e90565b90612f1261026292805490600160401b821015612f18575b600182018155612e82565b90612ed8565b612f20610cf4565b612f07565b909291612fbd90612f366001611412565b85101580612fed575b612f4890612dd5565b600090612f6185612f5b61149a85611412565b11612e21565b612fb8612f72610278866009611618565b91612fb1612faa33984293612f9a8b612f89612e6d565b998a01906001600160a01b03169052565b612fa58c60208a0152565b612e77565b6040860152565b6060840152565b612eef565b6111746126806119817f2b9c3d5cf21860ed898980596d65b176ebaa1765f7f9a288a51aad4672ba1e7593611412565b50612f48612ffb6005611412565b8611159050612f3f565b61026290613011610ff8565b6102629061194c600191600a611222565b61026290613005565b1561303257565b60405162461bcd60e51b81526020600482015260126024820152712737ba103a3432903134b5b29037bbb732b960711b6044820152606490fd5b6102629061308b61307c826112d4565b61308533611019565b1461302b565b6003600a61309c6001936008611618565b0101611904565b9060026130cd610262936130b961307c826112d4565b6130c661259a6000611412565b6008611618565b01611ee2565b61027860e0610d39565b6130e56130d3565b906060825260208080808080808801606081520160608152016060815201606081520160608152016060905250565b905250565b6102786130dd565b610278610160610d39565b613134613121565b90606082526020808080808080808080808c016060815201606081520160008152016000815201600081520160008152016000815201600081520160008152016000905250565b61027861312c565b61318b611ef9565b90600082526020808080808601600081520160008152016131aa613119565b81520161311461317b565b610278613183565b9061026261325360066131ce6130d3565b946131df6131db826113d4565b8752565b6131f56131ee600183016113d4565b6020880152565b61320b613204600283016113d4565b6040880152565b61322161321a600383016113d4565b6060880152565b613237613230600483016113d4565b6080880152565b61324d613246600583016113d4565b60a0880152565b016113d4565b60c0840152565b6102789060081c61165f565b610278905461325a565b9061028890610abf565b90610262613369600761328b613121565b946132986131db826113d4565b6132a76131ee600183016113d4565b6132b6613204600283016113d4565b6132ce6132c560038301611665565b15156060880152565b6132e66132dd60038301613266565b15156080880152565b6132fe6132f56003830161282d565b60a08801613270565b61331461330d60048301611241565b60c0880152565b61332c61332360058301611665565b151560e0880152565b61334c61333b60058301612c53565b6001600160a01b0316610100880152565b61336361335b60068301611241565b610120880152565b01611241565b610140840152565b906102626133da600a613382611ef9565b9461338f6131db82611241565b6133b66133a660018301546001600160a01b031690565b6001600160a01b03166020880152565b6133c561320460028301611241565b6133d461321a600383016131bd565b0161327a565b6080840152565b61027890613371565b613401610278916133f96131b5565b506008611618565b6133e1565b602080916001600160401b03811161341d57020190565b613425610cf4565b020190565b9061142c610d9283613406565b90610262612fb16003613448612e6d565b9461346a61345d82546001600160a01b031690565b6001600160a01b03168752565b6134796131ee60018301611241565b613363613204600283016113d4565b61027890613437565b9061349a825490565b6134a38161342a565b926134b76020850191600052602060002090565b6000915b8383106134c85750505050565b600460206001926134d885613488565b8152019201920191906134bb565b61027890613491565b613506610278916134fe606090565b506009611618565b6134e6565b9061352661351a610c65845490565b92600052602060002090565b9060005b8181106135375750505090565b90919261355b61355460019261354c87611241565b815260200190565b9460010190565b92910161352a565b906102789161350b565b906102626113ee9261357e60405190565b93848092613563565b6102789061356d565b6102789161168a6135ab926135a3606090565b50600b611618565b613587565b156135b757565b60405162461bcd60e51b815260206004820152601c60248201527f43616e6e6f74207472616e73666572207768696c652072656e746564000000006044820152606490fd5b61363b61026293600192613636828660089361363161362c61278b6005600a613625888b611618565b0101611665565b6135b0565b613731565b611618565b01611101565b1561364857565b60405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608490fd5b156136a257565b60405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b916001600160a01b0360089290920291821b911b6110d1565b919061371d610278611118936110f8565b9083546136f3565b6102629160009161370c565b919061375761373f836112d4565b6137516001600160a01b038616611019565b14613641565b6137aa600061377c61376b6103b283610f81565b6001600160a01b038516141561369b565b61379a613788856112d4565b6137516001600160a01b038816611019565b6137a5846004611618565b613725565b6127c86137b76001611412565b6124c36127be84600361168a6137cd8a83611222565b6124c3876137da83611241565b039056fea2646970667358221220f3e56510e1d70d37a32c90ace9b27da1c378b7acf6a8a65f89d252b4da9852d164736f6c63430008110033";

type KlunkazConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KlunkazConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Klunkaz__factory extends ContractFactory {
  constructor(...args: KlunkazConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Klunkaz & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Klunkaz__factory {
    return super.connect(runner) as Klunkaz__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KlunkazInterface {
    return new Interface(_abi) as KlunkazInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Klunkaz {
    return new Contract(address, _abi, runner) as unknown as Klunkaz;
  }
}
